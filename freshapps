#!/usr/bin/env bash

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
log_info() {
  printf "\n\e[0;35m $1\e[0m\n\n"
}

cd /tmp

log_info "Cleaning up ..."
sudo rm -f /tmp/google-chrome-stable_current_amd64.deb
sudo rm -f /tmp/pycharm-community-2022.3.tar.gz
sudo rm -rf /home/${USER}/pycharm-community-2022.3
sudo rm -f /tmp/wps-office_11.1.0.11664.XA_amd64.deb
sudo rm -f /tmp/docker-desktop-4.15.0-amd64.deb
sudo rm -f /tmp/lando-x64-stable.deb
sudo rm -f /tmp/linux64
sudo rm -f /tmp/teamviewer_amd64.deb
sudo rm -f /tmp/local-6.5.2-linux.deb

sudo apt install -y ca-certificates curl gnupg lsb-release
sudo apt update -y

log_info "Installing HTOP ..."
sudo apt install htop -y
apt-cache policy htop

log_info "Installing Google Chrome ..."
  if ! google-chrome --version; then
    sudo wget -vc https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo apt install ./google-chrome-stable_current_amd64.deb
    cat /etc/apt/sources.list.d/google-chrome.list
    apt-cache policy google-chrome-stable
  fi
  
log_info "Installing PyCharm ..."  
sudo wget -vc https://download.jetbrains.com/python/pycharm-community-2022.3.tar.gz
sudo tar -xzf pycharm-community-2022.3.tar.gz
sudo mv pycharm-community-2022.3/ /home/${USER}/pycharm-community-2022.3/
cd bin && sudo chmod u+x pycharm.sh
  
log_info "Installing Microsoft Visual Code ..."
  if ! code --version; then
    sudo wget -vc https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
    sudo apt install code -y
    sudo apt update -y
    apt-cache policy code
  fi

log_info "Installing Remmina - Remote access screen and file sharing to your desktop ..."
  if ! code --version; then    
    sudo apt-add-repository ppa:remmina-ppa-team/remmina-next
    sudo apt update -y
    sudo apt install remmina remmina-plugin-rdp remmina-plugin-secret -y
    apt-cache policy remmina
  fi

log_info "Installing WPS Office ..."
  if ! apt-cache search wps-office; then
    sudo wget -vc https://wdl1.pcfg.cache.wpscdn.com/wpsdl/wpsoffice/download/linux/11664/wps-office_11.1.0.11664.XA_amd64.deb
    sudo apt install ./wps-office_11.1.0.11664.XA_amd64.deb
    apt-cache policy wps-office
  fi
  
log_info "Installing Mozilla Thunderbird ..."
  if ! thunderbird --version; then
    sudo apt-get install thunderbird -y
    apt-cache policy thunderbird
  fi

log_info "Installing Postman ..."
wget -v https://dl.pstmn.io/download/latest/linux64
sudo tar -xvf linux64 -C /usr/bin
echo 'export PATH="$PATH:/usr/bin/Postman"' >> ~/.bashrc
sudo tee /usr/share/applications/Postman.desktop <<"EOF"
[Desktop Entry]
Name=Postman API Tool
GenericName=Postman
Comment=Testing API
Exec=/usr/bin/Postman/Postman
Terminal=false
X-MultipleArgs=false
Type=Application
Icon=/usr/bin/Postman/app/resources/app/assets/icon.png
StartupWMClass=Postman
StartupNotify=true
EOF



log_info "Installing Teamviewer ..."
  if ! teamviewer --version; then
    sudo wget -vc https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
    sudo apt install ./teamviewer_amd64.deb -y
    apt-cache policy teamviewer
  fi

log_info "Installing Local by Flywheel ..."
sudo wget -vc https://cdn.localwp.com/releases-stable/6.5.2+6204/local-6.5.2-linux.deb
sudo apt install ./local-6.5.2-linux.deb -y
apt-cache policy local

log_info "Installing Eddy debian package installer for elementary OS ..."
  if ! com.github.donadigo.eddy --help-all; then
    sudo apt install valac libgranite-dev libpackagekit-glib2-dev libunity-dev meson ninja-build libzeitgeist-2.0-dev gettext git -y
    git clone https://github.com/donadigo/eddy.git eddy
    cd eddy
    meson build && cd build
    meson configure -Dprefix=/usr
    ninja
    sudo ninja install
    cd ../
  fi
  
log_info "Installing Wingpanel Monitor ..."
  if ! com.github.plugarut.wingpanel-monitor --help-all; then
    sudo apt install libgtop2-dev libgranite-dev libgtk-3-dev libwingpanel-3.0-dev meson valac libgeoclue-2-dev libgweather-3-dev libhandy-1-dev git -y
    git clone https://github.com/PlugaruT/wingpanel-monitor.git wingpanel-monitor
    cd wingpanel-monitor
    meson build --prefix=/usr
    cd build
    ninja
    sudo ninja install
    cd ../
  fi
  
log_info "Installing Gimp ..."
  if ! gimp --version; then
    sudo apt install gimp -y
    apt-cache policy gimp
  fi

log_info "Installing Inkscape ..."
  if ! inkscape --version; then
    sudo apt install inkscape  -y
    apt-cache policy inkscape
  fi

log_info "Installing android studio - https://launchpad.net/~maarten-fonville/+archive/ubuntu/android-studio ..."
  if ! android-studio --version; then
    sudo add-apt-repository ppa:maarten-fonville/android-studio -y
    sudo apt-get update -y
    sudo apt install android-studio -y
    apt-cache policy android-studio
  fi
  
log_info "Installing OBS Studio ..."
  if ! obs-studio --version; then
    sudo apt install obs-studio -y
    apt-cache policy obs-studio
  fi

log_info "Installing videoLan Player ..."
  if ! vlc --version; then
    sudo apt install vlc -y
    apt-cache policy vlc
  fi
  
log_info "Installing Docker ..."
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
sudo systemctl enable docker
sudo systemctl enable containerd.service
sudo usermod -aG docker ${USER}
su - ${USER}

log_info "Cleaning up ..."
sudo rm -f /tmp/google-chrome-stable_current_amd64.deb
sudo rm -f /tmp/pycharm-community-2022.3.tar.gz
sudo rm -f /tmp/wps-office_11.1.0.11664.XA_amd64.deb
sudo rm -f /tmp/linux64
sudo rm -f /tmp/teamviewer_amd64.deb
sudo rm -f /tmp/local-6.5.2-linux.deb

apt list

echo "##########################"
echo "Ready to Rock"
echo "##########################"
